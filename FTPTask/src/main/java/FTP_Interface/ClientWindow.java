/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FTP_Interface;

import static FTP_Client.TextClient.logIn;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jojoj
 */
public class ClientWindow extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ClientWindow() {
        initComponents();
        this.setLocationRelativeTo(null);
        setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
    }

    ServerWindow ServerPanel = new ServerWindow();
    //RenameFilesWindow RenamePanel = new RenameFilesWindow();
    DirectorySWindow DirectPanel = new DirectorySWindow();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComandField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        downloadButton = new javax.swing.JButton();
        UploadBuuton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        ClientLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        setOpacity(0.0F);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComandField.setText("jTextField1");
        getContentPane().add(ComandField, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 170, 30));

        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 340, 130, 40));

        downloadButton.setBorder(null);
        downloadButton.setBorderPainted(false);
        downloadButton.setContentAreaFilled(false);
        downloadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        downloadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadButtonMouseClicked(evt);
            }
        });
        getContentPane().add(downloadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 130, 50));

        UploadBuuton.setBorder(null);
        UploadBuuton.setBorderPainted(false);
        UploadBuuton.setContentAreaFilled(false);
        UploadBuuton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UploadBuuton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UploadBuutonMouseClicked(evt);
            }
        });
        getContentPane().add(UploadBuuton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, 130, 40));

        addButton.setBorder(null);
        addButton.setBorderPainted(false);
        addButton.setContentAreaFilled(false);
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });
        getContentPane().add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 100, 40));

        ClientLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FTP_Images/Cliente panel.png"))); // NOI18N
        getContentPane().add(ClientLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
        //this.dispose();
        //ServerPanel.dispose();
        RenameFilesWindow RenamePanel = new RenameFilesWindow();
        RenamePanel.setVisible(true);

    }//GEN-LAST:event_addButtonMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        for (double i = 0.0; i <= 1.0; i = i + 0.1) {

            String val = i + "";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try {

                Thread.sleep(50);
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_formWindowOpened

    private void UploadBuutonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UploadBuutonMouseClicked
        // TODO add your handling code here:
        DirectPanel.setVisible(true);

    }//GEN-LAST:event_UploadBuutonMouseClicked

    private void downloadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadButtonMouseClicked
        // TODO add your handling code here:
        int controlPort = 21;
        try {

            //int port = 21
            // Connect with the server
            Socket connection = new Socket("localhost", controlPort);
            //connection = ExitConection;

            // Recover input & output from connection
            PrintWriter output = new PrintWriter(connection.getOutputStream(), true);

            String s = ComandField.getText();
            output.println(s);
            //Ponemos a "Dormir" el programa durante los ms que queremos
            Thread.sleep(5 * 1000);

            connection.close();
            System.out.println("SE CERRO");
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(ClientWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_downloadButtonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ClientLabel;
    private javax.swing.JTextField ComandField;
    private javax.swing.JButton UploadBuuton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton downloadButton;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
